<?xml version="1.0" encoding="UTF-8"?>
<!-- 이 문서는 mybatis에서 처리할 SQL문을 작성하는 문서입니다. -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<!-- <mapper>태그의 namespace속성은 Java소스에서 실행할 SQL문을 호출할 때 같이 사용되는 이름이다. -->
<mapper namespace="lprod">
	<!-- 
		이 부분에서는 처리할 SQL문에 맞는 태그를 사용하여 SQL문을 작성한다.
		
		* 사용할 수 있는 태그들...
		<select> select 구문을 작성 </select>
		<insert> insert 구문을 작성 </insert>
		<update> update 구문을 작성 </update>
		<delete> delete 구문을 작성 </delete>
	 -->
	<!-- 
		* id속성 ==> 실행할 태그를 Java소스에서 호출 할 때 사용되는 이름으로 <mapper>태그의 namespace속성값과
					연결해서 사용한다. (사용예 : "lprod.insertLprod")
		* parameterType속성 ==> 작성된 SQL문에 사용될 데이터가 들어있는 객체를 기술한다.
				(보통 VO클래스, Java의 기본 자료형 이름, Map객체 등이 사용된다.)
				(VO클래스 등을 기술할 떄는 해당 클래스의 전체 이름을 기술해야 한다.)
				(환경설정 xml문서에 "<typeAlias>" 태그에서 지정한 'alias명'으로 사용할 수도 있다.
	 -->
	
	<insert id="insertLprod" parameterType="lprodVo">
		insert into lprod (lprod_id, lprod_gu, lprod_nm)
		values (#{lprod_id}, #{lprod_gu}, #{lprod_nm})
	</insert>
	
	<update id="updateLprod" parameterType="lprodVo">
		update lprod set lprod_id = #{lprod_id}, lprod_nm = #{lprod_nm}
		where lprod_gu = #{lprod_gu}
	</update>
	
	<!-- 
		parameterType에 설정되는 값이 단일값이면 SQL문에 이 값을 나타내는 변수명은 특별히 정해지지 않는다.
		(즉, 사용자 임의로 지정할 수 있다.)
	 -->
	
	<delete id="deleteLprod" parameterType="String">
		delete from lprod where lprod_gu = #{lprod_gu}
	</delete>
	
	<!-- 
		* resultType속성 ==> select문이 처리한 결과를 저장할 VO클래스나 Java의 기본자료형 이름, 
				Map객체를 지정할 수 있다.
				
		select문을 처리한 결과가 여러개의 레코드이면 Java에서 'selectList()' 메서드를 이용하여 호출한다.
		그러면 검색된 데이터들을 자동으로 List에 담아서 반환한다. 그래서 결과가 여러개일 경우에도
		resultType속성에는 1개의 레코드가 저장될 VO클래스나 자료형 이름을 지정하면 된다.
	 -->
	<select id="getAlllprod" resultType="lprodVo">
		select * from lprod
	</select>
	
	<select id="getLprod" parameterType="String" resultType="lprodVo">
		select * from lprod where lprod_gu = #{lprod_gu}
	</select>

</mapper>